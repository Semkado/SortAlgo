<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAADB1AAAwdQAAAAAAAAAA
        AAD///8C////A////wP///8D////BP///wT///8F////Bf///wX///8F////Bv///wb///8G////Bv//
        /wb///8G////Bv///wb///8G////Bv///wb///8G////Bf///wX///8F////Bf///wT///8E////A///
        /wP///8D////Av///wP///8E////BP///wX///8F////Bv///wb///8G////B////wf///8H////B///
        /wj///8I////CP///wj///8I////CP///wj///8I////CP///wf///8H////B////wb///8G////Bv//
        /wX///8F////BP///wT///8D////BP///wV9HBVldB4YoHMfGaB1IRyhdSEcoXYiHKF2IhyhdiMdoXYj
        HaF2Ix2hdiMdoXclHqJ3JR6idyUeonclHqJ3JR6idyUeonclHqJ2Ix2hdiMdoXYjHaF2Ix2hdiIcoXYi
        HKF1IRyhdCIdoXYeF6B+Hxdm////Bf///wT///8F////BnUeF7FWNzX/Ujw6/1U5N/9VOjj/VTo4/1Y7
        Of9WOzn/Vzw6/1c8Ov9XPTv/Vz07/1c9O/9XPTv/Vz07/1c9O/9XPTv/Vz07/1c9O/9XPDr/Vzw6/1Y7
        Of9WOzn/VTo4/1U6OP9OPz7/Xy8s/3YeGLH///8G////Bf///wb///8GdCIdpEFKS/86UlP/P09Q/z9P
        UP9AUFH/QFFS/0BRUv9BUVL/QVFS/0FRUv9CUlP/QlJT/0JSU/9CUlP/QlJT/0JSU/9CUlP/QlJT/0FR
        Uv9BUVL/QFFS/0BRUv9AUFH/P09Q/zRXWf9PQD//dSMdpP///wf///8G////B////wd2IhyhSkRE/0RL
        S/9ISEj/SUlJ/0pKSv9KSkr/SkpK/0tLS/9LS0v/S0tL/0xMTP9MTEz/TExM/0xMTP9MTEz/TExM/0xM
        TP9LS0v/S0tL/0tLS/9KSkr/SkpK/0pKSv9JSUn/QFBR/1Y7Of92Ix2h////CP///wf///8H////CHYj
        HaFKRUX/RExM/0lJSf9KSkr/SkpK/0tLS/9MTEz/TExM/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/0xMTP9LS0v/SkpK/0pKSv9AUVL/Vzw6/3clHqL///8J////CP//
        /wj///8JdyUeoktFRf9GTk7/SkpK/0tLS/9MTEz/TU1N/01NTf9NTU3/TU1N/05OTv9PT0//T09P/09P
        T/9PT0//T09P/09PT/9PT0//T09P/05OTv9NTU3/TU1N/01NTf9MTEz/S0tL/0JSU/9YPTz/dyYfov//
        /wr///8J////Cf///wp3Jh+iTUdH/0dOTv9LS0v/TExM/01NTf9NTU3/Tk5O/09PT/9QUFD/UFBQ/1BQ
        UP9QUFD/UFBQ/1BQUP9QUFD/UFBQ/1BQUP9QUFD/UFBQ/09PT/9PT0//TU1N/01NTf9MTEz/Q1NU/1k+
        PP95KiOj////C////wr///8K////C3MmIKVGQUH/O0FB/z8/P/9ERET/SEhI/0hISP9ERET/QkJC/0ZG
        Rv9OTk7/UVFR/1JSUv9SUlL/UFBQ/0xMTP9KSkr/TU1N/0tLS/9FRUX/QkJC/0FBQf9AQED/Pz8//z8/
        P/87SEj/Vjw6/3orJKP///8M////C////wr///8McigiqDs3N/8mKCj/JSUl/y4uLv81NTX/MjIy/ysr
        K/8pKSn/Nzc3/0tLS/9SUlL/UFBQ/0pKSv9DQ0P/OTk5/zk5Of9GRkb/QkJC/zAwMP8pKSn/Ly8v/zAw
        MP8rKyv/JiYm/yoyMv9NNzb/fC0mpP///w3///8M////C////w11KiSmPjk5/yEjI/8YGBj/Hh4e/yUl
        Jf8iIiL/HBwc/yIiIv85OTn/S0tL/0tLS/9BQUH/NjY2/y4uLv8qKir/NDQ0/0ZGRv8/Pz//JiYm/yIi
        Iv80NDT/Ojo6/ywsLP8bGxv/ICUl/0k1NP98Liek////Dv///w3///8M////DnwtJqRWKyf/ag0F/2kN
        Bf9DFhL/QiAd/z8eG/9hDgb/ZQ0F/2IRCv9JR0f/ODg4/ywsLP8pKSn/Miwr/0slIf9eFQ7/TkpK/0ow
        Lv9kDQX/ZA0F/2UNBf9mDQX/Zw0F/2cNBf9gEQn/TTk3/30uKKT///8P////Dv///w3///8OfC4npE1H
        Rv9qEQn/bQ4G/20OBv9sDgX/aw4F/2sOBf9rDgX/VTMv/0RERP8uLi7/MB8d/00ZFf9pDQX/aQ0F/2kN
        Bf9QUFD/STQy/2oNBf9qDQX/OCMh/y0sLP9EGhb/bA4F/2wOBv9VPTz/fjArpf///xD///8O////Df//
        /w98LiekT0pK/10kH/9yDgb/bBAI/0ofHP9dFhD/cQ4G/3APB/9QTU3/TUVF/18bFv9wDgb/cA4G/2wQ
        Cf9aIBv/UTk3/05OTv9RMC3/bw4G/28OBv9DJyT/ODAv/0saFv9wDgb/cA4G/1U9PP9+MCul////Ef//
        /w////8N////D3wuJ6RQS0v/Tz07/3YPBv9xEAj/Hh4e/0gZFf93EAf/aCEb/1VVVf9fPjv/dg8G/3YP
        Bv9qFxD/PSwr/y4uLv85OTn/SUlJ/1YuK/91Dwb/dA8G/3QPBv90Dwb/dA8G/20QCP89KCb/UTw6/38x
        LKX///8R////D////w3///8OfC4npFBLS/9JT0//dBsT/3sXD/9IGxj/ahoU/3wZEf9cPTv/VlZW/11O
        Tf9yKyX/fBoS/3waEv93Hhf/Yikl/002NP9KSkr/VjQx/3sXD/96Fw7/VR8a/00gHP9uFw//cxQL/0Ur
        Kf9SPDz/fzEspf///xH///8P////DP///w58LiekUEpK/0pRUf9lMCz/fx8X/30hGv+BIhr/fiUd/1JQ
        UP9WVlb/VlZW/1dXV/9hTEr/cjo0/4MmHf+CJRz/giUc/1JSUv9VQD7/gSIa/4AhGf83Ly7/Li4u/2oi
        HP99GxP/eRsT/1lAP/9+MCul////EP///w////8M////DXwtJqRPSUn/SlFR/1VFRP+DJh3/hCcf/4Uo
        IP9yNzL/U1NT/1VVVf9WVlb/VlZW/1ZWVv9XV1f/W1NT/25EQP+CMyz/WFVU/2FHRf+GKyP/hioi/4Uo
        IP+DJx7/giUc/4EjG/9uMSz/XUNB/34wK6X///8Q////Dv///wv///8Neisko05ISP9JUFD/Tk5O/3E4
        M/95NC7/eTYw/11LSf9TU1P/U1NT/1RUVP9VVVX/VVVV/1ZWVv9WVlb/VlZW/1ZWVv9XVVX/Y01L/307
        Nf98OjT/gDUu/4EzLP96NS//bjo1/0tTVP9bQUD/fS4opP///w////8N////Cv///wx5KiOjTUhI/0hQ
        UP9NTU3/Tk5O/09PT/9QUFD/UVFR/1JSUv9SUlL/U1NT/1NTU/9TU1P/VFRU/1RUVP9UVFT/VFRU/1RU
        VP9UVFT/U1NT/1NTU/9SUlL/UVFR/1BQUP9PT0//RlZX/1tBP/98Liek////Dv///w3///8J////C3kp
        IqNNR0f/R09P/0xMTP9NTU3/Tk5O/09PT/9QUFD/UFBQ/1BQUP9RUVH/UlJS/1JSUv9TU1P/U1NT/1NT
        U/9TU1P/U1NT/1JSUv9SUlL/UVFR/1BQUP9QUFD/T09P/05OTv9EVFX/WkA+/3orJKP///8N////DP//
        /wn///8KdyYfokxGRv9HTk7/S0tL/0xMTP9NTU3/TU1N/05OTv9PT0//UFBQ/1BQUP9QUFD/UFBQ/1FR
        Uf9RUVH/UVFR/1FRUf9RUVH/UFBQ/1BQUP9QUFD/UFBQ/09PT/9NTU3/TU1N/0RTVP9ZPz3/eSojo///
        /wz///8K////CP///wl3JR6iS0VF/0VNTf9KSkr/S0tL/0xMTP9NTU3/TU1N/01NTf9OTk7/Tk5O/09P
        T/9PT0//UFBQ/1BQUP9QUFD/UFBQ/1BQUP9PT0//T09P/09PT/9OTk7/TU1N/01NTf9MTEz/Q1NU/1g9
        PP95KSKj////C////wr///8H////CHYjHaFKRUX/RExM/0lJSf9KSkr/SkpK/0tLS/9MTEz/TExM/01N
        Tf9NTU3/TU1N/01NTf9NTU3/Tk5O/05OTv9OTk7/TU1N/01NTf9NTU3/TU1N/01NTf9MTEz/S0tL/0pK
        Sv9BUVL/Vz07/3cmH6L///8K////Cf///wb///8HdiIcoUpERP9ES0v/SEhI/0lJSf9KSkr/SkpK/0pK
        Sv9LS0v/S0tL/0tLS/9MTEz/TExM/0xMTP9NTU3/TU1N/01NTf9MTEz/TExM/0xMTP9MTEz/S0tL/0pK
        Sv9KSkr/SkpK/0BRUv9XPDr/dyUeov///wn///8I////Bv///wZ1IRyhSUND/0JKSv9HR0f/R0dH/0hI
        SP9JSUn/SUlJ/0pKSv9KSkr/SkpK/0pKSv9KSkr/S0tL/0tLS/9LS0v/S0tL/0tLS/9KSkr/SkpK/0pK
        Sv9KSkr/SkpK/0lJSf9ISEj/P09Q/1U6OP92Ix2h////CP///wf///8F////BXIgGqBERkb/PE1O/0JK
        Sv9DS0v/Q0tL/0RLS/9ES0v/RExM/0RMTP9FTU3/RU1N/0VNTf9GTk7/Rk5O/0ZOTv9GTk7/Rk5O/0ZO
        Tv9FTU3/RU1N/0VNTf9ETEz/REtL/0RLS/85UlT/Ujw6/3QiHaH///8H////Bv///wT///8Fch0WvUpA
        P/9ERUX/SEJC/0hCQv9JQ0P/SUND/0pERP9KRET/SkRE/0pFRf9KRUX/SkVF/0pFRf9KRUX/SkVF/0pF
        Rf9KRUX/SkVF/0pFRf9KRUX/SkVF/0pERP9KRET/SUND/z9KS/9WNzX/cx8Zvv///wb///8F////A///
        /wN7GRFkcx0WoHMfGKBzHxigcx8ZoHMfGaB1IRyhdSEcoXUhHKF2IhyhdiIcoXYiHKF2IhyhdiIcoXYi
        HKF2IhyhdiIcoXYiHKF2IhyhdiIcoXYiHKF2IhyhdSEcoXUhHKF1IRyhciAaoHYeF6B9HBVl////Bf//
        /wT///8C////Av///wP///8D////A////wT///8E////Bf///wX///8F////Bv///wb///8G////Bv//
        /wb///8G////Bv///wf///8H////B////wb///8G////Bv///wb///8G////Bf///wX///8F////BP//
        /wT///8D////A////wL///8C////Av///wL///8C////A////wP///8D////A////wT///8E////BP//
        /wT///8E////Bf///wX///8F////Bf///wX///8F////Bf///wX///8F////Bf///wT///8E////BP//
        /wP///8D////A////wP///8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>